<?php
// src/AppBundle/Entity/Albums.php
namespace Creativer\FrontBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use JMS\Serializer\Annotation as JMS;
use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\Common\Collections\ArrayCollection;



/**
 * @ORM\Entity()
 * @ORM\Table(name="shops")
 * @JMS\ExclusionPolicy("all")
 */
class Shops
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @JMS\Groups({"idUserByIdImage", "getUser", "getAlbumById", "getCatalogProductAlbums", "getCatalogServiceAlbums"})
     * @JMS\Expose
     */
    private $id;


    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @JMS\Groups({"idUserByIdImage", "getUser", "getAlbumById", "getCatalogProductAlbums", "getCatalogServiceAlbums"})
     * @JMS\Expose
     */
    private $img;

    /**
     * @ORM\Column(type="string", nullable=true, length=255)
     * @JMS\Groups({"idUserByIdImage", "getUser", "getAlbumById", "getCatalogProductAlbums", "getCatalogServiceAlbums"})
     * @JMS\Expose
     */
    private $path;

    /**
     * @ORM\Column(type="text", nullable=true)
     * @JMS\Expose
     * @JMS\Groups({"idUserByIdImage", "getUser", "getAlbumById", "getCatalogProductAlbums", "getCatalogServiceAlbums"})
     */
    private $name;


    /**
     * @JMS\Expose
     * @ORM\Column(type="text", nullable=true)
     * @JMS\Groups({})
     */
    private $description;

    /**
     * @JMS\Expose
     * @ORM\Column(type="text", nullable=true)
     * @JMS\Groups({})
     */
    private $full_description;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @JMS\Groups({""})
     * @JMS\Expose
     */
    private $telephone;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @JMS\Groups({""})
     * @JMS\Expose
     */
    private $email;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @JMS\Groups({""})
     * @JMS\Expose
     */
    private $site;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @JMS\Groups({""})
     * @JMS\Expose
     */
    private $working_time;

    /**
     * @JMS\Expose
     * @ORM\OneToMany(targetEntity="ImagesShops", mappedBy="shop")
     * @ORM\OrderBy({"id" = "DESC"})
     * @JMS\Groups({})
     **/
    private $images;

    /**
     * @JMS\Expose
     * @ORM\OneToMany(targetEntity="Address", mappedBy="shop", fetch="EAGER")
     * @JMS\Groups({"getUser"})
     **/
    private $address;

    /**
     * @ORM\ManyToMany(targetEntity="Categories", inversedBy="albums")
     * @ORM\JoinTable(name="shops_categories")
     * @JMS\Expose
     * @JMS\Groups({"getAlbumById"})
     */
    private $categories;

    /**
     * @JMS\Expose
     * @var \DateTime $date
     *
     * @Gedmo\Timestampable(on="create")
     * @ORM\Column(type="datetime")
     */
    private $date;

    /**
     * @ORM\Column(type="integer", name="is_active")
     */
    private $isActive = 0;


    public function __construct()
    {
        $this->images = new ArrayCollection();
        $this->address = new ArrayCollection();
        $this->categories = new ArrayCollection();
        $this->date = new \DateTime();
    }



    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set img
     *
     * @param string $img
     * @return Shops
     */
    public function setImg($img)
    {
        $this->img = $img;

        return $this;
    }

    /**
     * Get img
     *
     * @return string 
     */
    public function getImg()
    {
        return $this->img;
    }

    /**
     * Set path
     *
     * @param string $path
     * @return Shops
     */
    public function setPath($path)
    {
        $this->path = $path;

        return $this;
    }

    /**
     * Get path
     *
     * @return string 
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Shops
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set description
     *
     * @param string $description
     * @return Shops
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set full_description
     *
     * @param string $fullDescription
     * @return Shops
     */
    public function setFullDescription($fullDescription)
    {
        $this->full_description = $fullDescription;

        return $this;
    }

    /**
     * Get full_description
     *
     * @return string 
     */
    public function getFullDescription()
    {
        return $this->full_description;
    }

    /**
     * Set telephone
     *
     * @param string $telephone
     * @return Shops
     */
    public function setTelephone($telephone)
    {
        $this->telephone = $telephone;

        return $this;
    }

    /**
     * Get telephone
     *
     * @return string 
     */
    public function getTelephone()
    {
        return $this->telephone;
    }

    /**
     * Set email
     *
     * @param string $email
     * @return Shops
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set site
     *
     * @param string $site
     * @return Shops
     */
    public function setSite($site)
    {
        $this->site = $site;

        return $this;
    }

    /**
     * Get site
     *
     * @return string 
     */
    public function getSite()
    {
        return $this->site;
    }

    /**
     * Set working_time
     *
     * @param string $workingTime
     * @return Shops
     */
    public function setWorkingTime($workingTime)
    {
        $this->working_time = $workingTime;

        return $this;
    }

    /**
     * Get working_time
     *
     * @return string 
     */
    public function getWorkingTime()
    {
        return $this->working_time;
    }

    /**
     * Set date
     *
     * @param \DateTime $date
     * @return Shops
     */
    public function setDate($date)
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Get date
     *
     * @return \DateTime 
     */
    public function getDate()
    {
        return $this->date;
    }

    /**
     * Set isActive
     *
     * @param integer $isActive
     * @return Shops
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;

        return $this;
    }

    /**
     * Get isActive
     *
     * @return integer 
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * Add images
     *
     * @param \Creativer\FrontBundle\Entity\ImagesShops $images
     * @return Shops
     */
    public function addImage(\Creativer\FrontBundle\Entity\ImagesShops $images)
    {
        $this->images[] = $images;

        return $this;
    }

    /**
     * Remove images
     *
     * @param \Creativer\FrontBundle\Entity\ImagesShops $images
     */
    public function removeImage(\Creativer\FrontBundle\Entity\ImagesShops $images)
    {
        $this->images->removeElement($images);
    }

    /**
     * Get images
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getImages()
    {
        return $this->images;
    }

    /**
     * Add address
     *
     * @param \Creativer\FrontBundle\Entity\Address $address
     * @return Shops
     */
    public function addAddress(\Creativer\FrontBundle\Entity\Address $address)
    {
        $this->address[] = $address;

        return $this;
    }

    /**
     * Remove address
     *
     * @param \Creativer\FrontBundle\Entity\Address $address
     */
    public function removeAddress(\Creativer\FrontBundle\Entity\Address $address)
    {
        $this->address->removeElement($address);
    }

    /**
     * Get address
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Add categories
     *
     * @param \Creativer\FrontBundle\Entity\Categories $categories
     * @return Shops
     */
    public function addCategory(\Creativer\FrontBundle\Entity\Categories $categories)
    {
        $this->categories[] = $categories;

        return $this;
    }

    /**
     * Remove categories
     *
     * @param \Creativer\FrontBundle\Entity\Categories $categories
     */
    public function removeCategory(\Creativer\FrontBundle\Entity\Categories $categories)
    {
        $this->categories->removeElement($categories);
    }

    /**
     * Get categories
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getCategories()
    {
        return $this->categories;
    }
}
